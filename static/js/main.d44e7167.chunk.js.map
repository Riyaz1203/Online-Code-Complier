{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","react_default","a","createElement","className","concat","type","onClick","prevOpen","index_es","icon","faCompressAlt","faExpandAlt","react_codemirror2","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","PREFIX","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","_useLocalStorage","_useLocalStorage2","html","setHtml","_useLocalStorage3","_useLocalStorage4","css","setCss","_useLocalStorage5","_useLocalStorage6","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","Fragment","title","sandbox","frameBorder","width","height","ReactDOM","createRoot","document","getElementById","render","components_App"],"mappings":"iQAUe,SAASA,EAAOC,GAAO,IAElCC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,SAAQC,EAEcC,oBAAS,GAAKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA/BK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GAMpB,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAS,oBAAAC,OAAsBN,EAAO,GAAK,cAC9CE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZb,EACDU,EAAAC,EAAAC,cAAA,UACEG,KAAK,SACLF,UAAU,sBACVG,QAAS,kBAAMP,EAAQ,SAAAQ,GAAQ,OAAKA,MAEpCP,EAAAC,EAAAC,cAACM,EAAA,EAAe,CAACC,KAAMX,EAAOY,IAAgBC,QAGlDX,EAAAC,EAAAC,cAACU,EAAA,WAAgB,CACfC,eAjBN,SAAsBC,EAAQC,EAAMxB,GAClCC,EAASD,IAiBLA,MAAOA,EACPY,UAAU,sBACVa,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAM9B,EACN+B,MAAO,WACPC,aAAa,MC1CvB,IAAMC,EAAS,iBAEA,SAASC,EAAgBC,EAAKC,GAC3C,IAAMC,EAAcJ,EAASE,EAAG/B,EAENC,mBAAS,WACjC,IAAMiC,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACFA,IAEAA,IAET9B,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GATKF,EAAKI,EAAA,GAAEqC,EAAQrC,EAAA,GAetB,OAJAsC,oBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAU5C,KAChD,CAACmC,EAAanC,IAEV,CAACA,EAAOyC,GCsCFI,MAxDf,WAAe,IAAAC,EACWd,EAAgB,OAAQ,IAAGe,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAA5CE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAAAG,EACElB,EAAgB,MAAO,IAAGmB,EAAA9C,OAAAC,EAAA,EAAAD,CAAA6C,EAAA,GAAzCE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAAAG,EACEtB,EAAgB,KAAM,IAAGuB,EAAAlD,OAAAC,EAAA,EAAAD,CAAAiD,EAAA,GAAtCE,EAAED,EAAA,GAAEE,EAAKF,EAAA,GAAArD,EACYC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAjCwD,EAAMtD,EAAA,GAAEuD,EAASvD,EAAA,GAgBxB,OAdAsC,oBAAU,WACR,IAAMkB,EAAUC,WAAW,WACzBF,EAAS,qCAAA9C,OAEGmC,EAAI,8BAAAnC,OACHuC,EAAG,gCAAAvC,OACF2C,EAAE,yCAGf,KAEH,OAAO,kBAAMM,aAAaF,KACzB,CAACZ,EAAMI,EAAKI,IAGb/C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACEtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACf,EAAM,CACLE,SAAS,MACTC,YAAY,OACZC,MAAOgD,EACP/C,SAAUgD,IAEZxC,EAAAC,EAAAC,cAACf,EAAM,CACLE,SAAS,MACTC,YAAY,MACZC,MAAOoD,EACPnD,SAAUoD,IAEZ5C,EAAAC,EAAAC,cAACf,EAAM,CACLE,SAAS,aACTC,YAAY,KACZC,MAAOwD,EACPvD,SAAUwD,KAGdhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UACE+C,OAAQA,EACRM,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YChDJC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhE,EAAAC,EAAAC,cAAC+D,EAAG","file":"static/js/main.d44e7167.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Editor(props) {\r\n  const {\r\n    language,\r\n    displayName,\r\n    value,\r\n    onChange\r\n  } = props\r\n  const [open, setOpen] = useState(true)\r\n\r\n  function handleChange(editor, data, value) {\r\n    onChange(value)\r\n  }\r\n\r\n  return (\r\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n      <div className=\"editor-title\">\r\n        {displayName}\r\n        <button\r\n          type=\"button\"\r\n          className=\"expand-collapse-btn\"\r\n          onClick={() => setOpen(prevOpen => !prevOpen)}\r\n        >\r\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n        </button>\r\n      </div>\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: 'material',\r\n          lineNumbers: true\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor'\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/App.js';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App/>\n);\n\n\n"],"sourceRoot":""}